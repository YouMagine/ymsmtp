{
  "author": {
    "name": "Matt Sergeant",
    "email": "helpme@gmail.com",
    "url": "http://baudehlo.com/"
  },
  "name": "Haraka",
  "description": "An SMTP Server project.",
  "keywords": [
    "haraka",
    "smtp",
    "server",
    "email"
  ],
  "version": "2.5.0",
  "homepage": "http://haraka.github.io",
  "repository": {
    "type": "git",
    "url": "git://github.com/baudehlo/Haraka.git"
  },
  "main": "haraka.js",
  "engines": {
    "node": ">= v0.8.0"
  },
  "dependencies": {
    "nopt": "~2.1.2",
    "generic-pool": "~2.0.2",
    "iconv": "~2.1.0",
    "ipaddr.js": "~0.1.2",
    "semver": "~2.2.1",
    "async": "~0.2.9",
    "daemon": "~1.1.0",
    "npid": "~0.4.0",
    "address-rfc2822": "~0.0.2",
    "node-syslog": "~1.1.7",
    "ldapjs": "~0.7.1",
    "vs-stun": "~0.0.7",
    "geoip-lite": "~1.1.3",
    "redis": "~0.10.1"
  },
  "optionalDependencies": {
    "node-syslog": "~1.1.7",
    "ldapjs": "~0.7.1",
    "vs-stun": "~0.0.7",
    "geoip-lite": "~1.1.3",
    "redis": "~0.10.1"
  },
  "devDependencies": {
    "nodeunit": "https://github.com/godsflaw/nodeunit/archive/master.tar.gz"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/baudehlo/Haraka/blob/master/LICENSE"
    }
  ],
  "bugs": {
    "url": "https://github.com/baudehlo/Haraka/issues"
  },
  "bin": {
    "haraka": "./bin/haraka",
    "spf": "./bin/spf",
    "haraka_grep": "./bin/haraka_grep"
  },
  "scripts": {
    "test": "./run_tests",
    "start": "node server.js"
  },
  "readme": "\nHaraka - a Node.js Mail Server\n------------------------------\n\n[![Build Status](https://travis-ci.org/baudehlo/Haraka.svg?branch=master)](https://travis-ci.org/baudehlo/Haraka)\n\nHaraka is an SMTP server which uses a plugin architecture to implement most\nof its functionality. It uses a highly scalable event model to be able to\ncope with thousands of concurrent connections. Plugins are written in\nJavascript using [Node.js][1], and as such perform extremely quickly. The\ncore Haraka framework is capable of processing thousands of messages per\nsecond on the right hardware.\n\nHaraka can be used either as an inbound SMTP server, and is designed with\ngood anti-spam protections in mind (see the `plugins` directory), or it can\nbe used as an outbound mail server - the most common way of doing this is by\nrunning it on port 587 with an \"auth\" plugin to authenticate your users.\n\nA full mail system for end users is vastly complicated, and so Haraka makes\nno attempt to be an IMAP server, figure out where mails should be delivered,\nor implement any of the functionality of a mail store. As such it is common\nto have a backend mail server which Haraka delivers to for that sort of\nfunctionality - Exchange, Postfix, Dovecot or Courier would be examples of\nsuch systems.\n\nHaraka does have a scalable outbound mail delivery engine built in. Any mail\nmarked as `relaying` (such as via an `auth` plugin) will automatically be\nqueued for outbound delivery.\n\n### Join the Mailing List\n\nTo get started with Haraka and ask questions about it, please join the\nmailing list: mailto:haraka-sub@harakamail.com - the mailing list is\nimplemented as a Haraka plugin.\n\n### Screencast\n\n[Getting started with Haraka][2]\n\n### Why Use Haraka?\n\nHaraka's primary purpose is to provide you with a much easier to extend\nmail server than most available SMTP servers out there such as Postfix,\nExim or Microsoft Exchange, yet while still running those systems for their\nexcellent ability to deliver mail to users.\n\nThe plugin system makes it trivial to code new features. A typical example\nmight be to provide qmail-like extended addresses to an Exchange system,\nwhereby you could receive mail as `user-anywordshere@domain.com`, and yet\nstill have it correctly routed to `user@domain.com`. This is a few lines of\ncode in Haraka, or maybe someone has already written this plugin.\n\nPlugins are already provided for running mail through SpamAssassin, checking\nfor known bad HELO patterns, checking DNS Blocklists, and watching for\nviolators of the SMTP protocol via the \"early\\_talker\" plugin.\n\nFurthermore Haraka comes with a simple plugin called \"graph\" which shows you\nreal-time charts of which plugins rejected the most mail, allowing you to\neasily fine-tune your list of plugins to more effectively stop spam.\n\n### Installing Haraka\n\nHaraka is written in Javascript and requires [node.js][1] to run.\n\nInstallation is very simple via [npm][2]:\n\n    $ npm install -g Haraka\n\nThat will provide you with a `haraka` binary which allows you to setup the\nservice.\n\n### Running Haraka\n\nSetting up Haraka is simple. Firstly we need to create the service:\n\n    $ haraka -i /path/to/haraka_test\n\nThat creates the directory `haraka_test` and creates `config` and `plugin`\ndirectories in there, and automatically sets the host name used by Haraka\nto the output of the `hostname` command.\n\nThis assumes that `hostname` gives you the correct host you want to receive\nmail for. If not, edit the `config/host_list` file. For example if you want\nto receive mail addressed to `user@domain.com`, add `domain.com` to the\n`config/host_list` file.\n\nFinally just start Haraka:\n\n    $ haraka -c /path/to/haraka_test\n\nAnd it will run.\n\nHowever the big thing you want to do next is to edit the `config/plugins`\nfile. This determines what plugins run in Haraka, and controls the overall\nbehaviour of the server. By default the server is setup to receive mails for\ndomains in `host_list` and deliver them via `smtp-forward`. Configure the\ndestination in `config/smtp_forward.ini`.\n\nEach plugin has documentation available via `haraka -h plugins/<name>`.\nLook there for information about how each plugin is configured, edit your\n`config/plugins` file, restart Haraka and enjoy!\n\nFeel free to write to the mailing list with any questions. Or use github\n\"Issues\".\n\n### Running from git\n\nIf you are unable to use npm to install Haraka, you can run from git by\nfollowing these steps:\n\nFirst clone the repository:\n\n    $ git clone https://github.com/baudehlo/Haraka.git\n    $ cd Haraka\n\nEdit `config/plugins` and `config/smtp.ini` to specify the plugins and\nconfig you want.\n\nFinally run Haraka:\n\n    $ node haraka.js\n\n### Performance\n\nHaraka is fast, due to the nature of using the v8 Javascript engine, and\nit is scalable due to using async I/O everywhere. On my local system I have\nmanaged to scale it up to 5000 emails per second (with minimal plugins).\n\nI welcome other performance evaluations.\n\n### License and Author\n\nHaraka is MIT licensed - see the LICENSE file for details.\n\nHaraka is a project started by Matt Sergeant, a 10 year veteran of the email\nand anti-spam world. Previous projects have been the project leader for\nSpamAssassin and a hacker on Qpsmtpd, a perl based mail server which is \nquite similar to Haraka (but not as fast due to perl being slower than\nJavascript).\n\n[1]: http://nodejs.org/\n[2]: http://youtu.be/6twKXMAsPsw\n\n",
  "readmeFilename": "README.md",
  "_id": "Haraka@2.5.0",
  "dist": {
    "shasum": "f2ba5f919bf8f49781e70992e68b4ff6fdb15028"
  },
  "_from": "Haraka@",
  "_resolved": "https://registry.npmjs.org/Haraka/-/Haraka-2.5.0.tgz"
}
