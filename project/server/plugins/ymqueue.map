{"version":3,"sources":["YmSmtpLog.coffee","YmQueue.coffee"],"names":[],"mappings":"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","file":"ymqueue.js","sourceRoot":"","sourcesContent":["class YmSmtpLog\n\t_ = require('lodash')\n\tconstructor:(haraka)->\n\t\t@haraka=haraka\n\t\t@fs=require('fs')\n\t\t@util=require('util');\n\t\t@logfile=__dirname.replace(/\\/[^\\/]+\\/[^\\/]+$/,'')+\"/logs/ymsmtp.log\";\n\n\tlog:(data,maxDepth=10)=>\n\t\tif typeof data=='string'\n\t\t\t@out(data,1)\n\t\telse\t\n\t\t\t@out('Dump:'+@dump(data,maxDepth),1)\n\n\tout:(string,level=1)=>\n\t\t@fs.appendFile(@logfile,\"[#{level}] \"+new Date().toString()+' '+string.toString().trim()+\"\\n\",(err)=>\n\t\t\tif (err)\n\t\t\t\t@haraka.logcrit err\n  \t\t)\n\n\tdump:(o,maxDepth,path='',objects=[],depth=0)=>\n\t\tif (maxDepth==depth)\n\t\t\treturn '';\n\t\tpad = '~'\n\t\tout = ''\n\t\ttoDump = {};\n\t\tfor k,v of o\n\t\t\ttype = typeof v\n\t\t\tswitch type\n\t\t\t\twhen 'string'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'function'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v.toString().split('\\n')[0].replace( /{.*/gm ,'' )+']');\n\t\t\t\twhen 'boolean'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'number'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'undefined'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'object'\n\t\t\t\t\tif (_.indexOf objects,v) ==-1\n\t\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+\"New \"+type+\": \"+path+k+'{'+_.size(v)+'}';\n\t\t\t\t\t\tobjects.push(v)\n\t\t\t\t\t\tout+=@dump(v,maxDepth,path+k+'.',objects,depth+1);\n\t\t\t\t\telse\n\t\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+\"Seen \"+type+\": \"+path+k+'{'+_.size(o[k])+'}';\n\t\t\t\telse\n\t\t\t\t\tout+=(\"\\n\"+Array(depth+1).join(pad)+\"???->\"+type+\": \"+path+k+'[NA]');\n\t\t\n\t\treturn out+\"\\n\";\n\t\t","exports.hook_queue = (next, connection)=>\n\tnew YmQueue(next, connection)\n\nclass YmQueue\n\tconstructor:(next, connection)->\n\t\t@log=new YmSmtpLog(this).log\n\t\t@fs= require('fs')\n\t\tws = @fs.createWriteStream(__dirname.replace(/\\/[^\\/]+\\/[^\\/]+$/,'')+'/spool/'+connection.uuid+'.eml')\n\t\tws.on('error',(err)=>\n\t\t\t@log \"Failed to write to spool\"\n\t\t\treturn next(DENY,\"Failed to write to spool... sorry!\");\n\t\t)\n\t\tws.once 'close',=>\n\t\t\treturn next(OK)\n\t\tconnection.transaction.message_stream.pipe(ws);\n\t\t\n\t\t\n"]}