{"version":3,"sources":["YmSmtpLog.coffee","YmAttachments.coffee"],"names":[],"mappings":"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","file":"ymattach.js","sourceRoot":"","sourcesContent":["class YmSmtpLog\n\t_ = require('lodash')\n\tconstructor:(haraka)->\n\t\t@haraka=haraka\n\t\t@fs=require('fs')\n\t\t@util=require('util');\n\t\t@logfile=__dirname.replace(/\\/[^\\/]+\\/[^\\/]+$/,'')+\"/logs/ymsmtp.log\";\n\n\tlog:(data,maxDepth=10)=>\n\t\tif typeof data=='string'\n\t\t\t@out(data,1)\n\t\telse\t\n\t\t\t@out('Dump:'+@dump(data,maxDepth),1)\n\n\tout:(string,level=1)=>\n\t\t@fs.appendFile(@logfile,\"[#{level}] \"+new Date().toString()+' '+string.toString().trim()+\"\\n\",(err)=>\n\t\t\tif (err)\n\t\t\t\t@haraka.logcrit err\n  \t\t)\n\n\tdump:(o,maxDepth,path='',objects=[],depth=0)=>\n\t\tif (maxDepth==depth)\n\t\t\treturn '';\n\t\tpad = '~'\n\t\tout = ''\n\t\ttoDump = {};\n\t\tfor k,v of o\n\t\t\ttype = typeof v\n\t\t\tswitch type\n\t\t\t\twhen 'string'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'function'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v.toString().split('\\n')[0].replace( /{.*/gm ,'' )+']');\n\t\t\t\twhen 'boolean'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'number'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'undefined'\n\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+(type+\": \"+path+k+'['+v+']');\n\t\t\t\twhen 'object'\n\t\t\t\t\tif (_.indexOf objects,v) ==-1\n\t\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+\"New \"+type+\": \"+path+k+'{'+_.size(v)+'}';\n\t\t\t\t\t\tobjects.push(v)\n\t\t\t\t\t\tout+=@dump(v,maxDepth,path+k+'.',objects,depth+1);\n\t\t\t\t\telse\n\t\t\t\t\t\tout+=\"\\n\"+Array(depth+1).join(pad)+\"Seen \"+type+\": \"+path+k+'{'+_.size(o[k])+'}';\n\t\t\t\telse\n\t\t\t\t\tout+=(\"\\n\"+Array(depth+1).join(pad)+\"???->\"+type+\": \"+path+k+'[NA]');\n\t\t\n\t\treturn out+\"\\n\";\n\t\t","exports.hook_data = (next, connection)=>\n\tnew YmAttachment(next, connection)\n\n\nclass YmAttachment\n\tconstructor:(next, connection)->\n\t\t@connection=connection;\n\t\t@log=new YmSmtpLog(this).log\n\t\t@fs= require('fs')\n\t\t@next=next\n\t\t@connection.transaction.parse_body = 1\n\t\t@data=connection.transaction.notes.ym\n\t\t@connection.transaction.attachment_hooks((ct, fn, body, stream)=>@attachmentStart(ct, fn, body, stream)) \n\t\t@next();\n\n\n\tattachmentStart:(contentType, fileName, body, stream)=>\n\t\t# Apply backpressure on the connection during filestream\n\t\tstream.connection = @connection\n\t\tstream.pause();\n\t\t@log(\"Getting attachment #{fileName}\")\n\t\tpath=__dirname.replace(/\\/[^\\/]+\\/[^\\/]+$/,'')+'/spool/'+@connection.uuid+'.'+@data.attachments.length+'.att'\n\t\to = {}\n\t\to.filename = fileName\n\t\to.type = contentType\n\t\to.path = path\n\t\to.saved = null\n\t\t@data.attachments.push o\n\n\t\tws = @fs.createWriteStream(path);\n\t\t@data.addTask(ws)\n\t\tws.on('close',=>\n\t\t\t@log(\"Saved attachment #{fileName} to #{path}\")\n\t\t\to.saved = true\n\t\t\t@data.ready(ws)\n\t\t\t# todo: add stat info (size)\n\t\t)\n\t\tws.on('error',(err)=>\n\t\t\t@log(\"Failed to write attachment #{fileName}\")\n\t\t\to.saved = false;\n\t\t\t@data.ready(ws)\n\t\t)\n\t\tstream.pipe(ws);\n\t\tstream.resume();\n\n\t\t\n\t\t\n\n    \n  \n\n\n"]}